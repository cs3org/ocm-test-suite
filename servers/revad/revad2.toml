[log]
level = "debug"

[shared]
gatewaysvc = "revad2.docker:19000"
# gatewaycertfile = "/etc/revad/tls/revad2.crt"

# [registry]
# driver = "static"
#
# [registry.static]
# services = ["authprovider","userprovider"]
#
# [registry.static.authprovider]
# bearer = ["localhost:0123"]
# basic = ["localhost:1234"]
# publiclink = ["localhost:9876"]

[grpc]
address = "0.0.0.0:19000"
# certfile = "/etc/revad/tls/revad2.crt"
# keyfile = "/etc/revad/tls/revad2.key"

[grpc.services.gateway]
authregistrysvc = "revad2.docker:19000"
appprovidersvc = "revad2.docker:19000"
appregistry = "revad2.docker:19000"
storageregistrysvc = "revad2.docker:19000"
preferencessvc = "revad2.docker:19000"
userprovidersvc = "revad2.docker:19000"
usershareprovidersvc = "revad2.docker:19000"
publicshareprovidersvc = "revad2.docker:19000"
ocmcoresvc = "revad2.docker:19000"
ocmshareprovidersvc = "revad2.docker:19000"
ocminvitemanagersvc = "revad2.docker:19000"
ocmproviderauthorizersvc = "revad2.docker:19000"
commit_share_to_storage_grant = false
datagateway = "http://localhost:19001/data"
transfer_expires = 6 # give it a moment

[grpc.services.authregistry]
driver = "static"

[grpc.services.authregistry.drivers.static.rules]
basic = "revad2.docker:19000"

[grpc.services.storageregistry]
driver = "static"

[grpc.services.storageregistry.drivers.static]
home_provider = "/home"

[grpc.services.storageregistry.drivers.static.rules]
"/home" = {"address" = "revad2.docker:19000"}
"123e4567-e89b-12d3-a456-426655440000" = {"address" = "revad2.docker:19000"}

[grpc.services.usershareprovider]
driver = "memory"

[grpc.services.ocmcore]
driver = "json"

# Note that ocmcore and ocmshareprovider should use the same file for storing the shares.
[grpc.services.ocmcore.drivers.json]
file = "/var/tmp/reva/shares_server_1.json"

[grpc.services.ocminvitemanager]
driver = "json"

[grpc.services.ocmshareprovider]
driver = "json"

[grpc.services.ocmshareprovider.drivers.json]
file = "/var/tmp/reva/shares_server_1.json"

[grpc.services.ocmproviderauthorizer]
driver = "json"

[grpc.services.ocmproviderauthorizer.drivers.json]
providers = "providers.demo.json"
verify_request_hostname = true

[grpc.services.publicshareprovider]
driver = "memory"

[grpc.services.appprovider]
driver = "demo"
iopsecret = "testsecret"
wopiurl = "http://0.0.0.0:8880/"
wopibridgeurl = "http://localhost:8000/wopib"

[grpc.services.appregistry]
driver = "static"

[grpc.services.appregistry.static.rules]
"text/plain" = "revad2.docker:19000"
"text/markdown" = "revad2.docker:19000"
"application/compressed-markdown" = "revad2.docker:19000"
"application/vnd.oasis.opendocument.text" = "revad2.docker:19000"
"application/vnd.oasis.opendocument.spreadsheet" = "revad2.docker:19000"
"application/vnd.oasis.opendocument.presentation" = "revad2.docker:19000"

[grpc.services.storageprovider]
driver = "localhome"
mount_path = "/home"
mount_id = "123e4567-e89b-12d3-a456-426655440000"
expose_data_server = true
data_server_url = "http://localhost:19001/data"
enable_home_creation = true

[grpc.services.storageprovider.mimetypes]
".zmd" = "application/compressed-markdown"

[grpc.services.storageprovider.drivers.localhome]
user_layout = "{{.Username}}"

[grpc.services.authprovider]
auth_manager = "json"

[grpc.services.authprovider.auth_managers.json]
users = "users.demo.json"

[grpc.services.userprovider]
driver = "json"

[grpc.services.userprovider.drivers.json]
users = "users.demo.json"

[http]
enabled_services = ["ocmd"]
enabled_middlewares = ["providerauthorizer", "cors"]
address = "0.0.0.0:443"
certfile = "/etc/revad/tls/revad2.crt"
keyfile = "/etc/revad/tls/revad2.key"

[http.services.dataprovider]
driver = "localhome"

[http.services.prometheus]
[http.services.sysinfo]

[http.services.dataprovider.drivers.localhome]
user_layout = "{{.Username}}"

[http.services.ocmd]
prefix = "ocm"

[http.services.ocmd.config]
host = "revad2.docker"
provider = "test-revad2"

[http.middlewares.providerauthorizer]
driver = "json"

[http.middlewares.providerauthorizer.drivers.json]
providers = "providers.demo.json"

[http.services.ocs]
prefix = "ocs"

[http.services.ocdav]
prefix = "ocdav"

[http.middlewares.cors]
