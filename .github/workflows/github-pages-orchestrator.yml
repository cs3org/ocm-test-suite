name: OCM GitHub Pages Orchestrator

on:
  workflow_run:
    workflows:
      - "OCM Test Invite Link NC SM v27.1.11 to NC SM v27.1.11"
      - "OCM Test Invite Link NC SM v27.1.11 to OC SM v10.15.0"
      - "OCM Test Invite Link NC SM v27.1.11 to oCIS v5.0.9"
      - "OCM Test Invite Link OC SM v10.15.0 to NC SM v27.1.11"
      - "OCM Test Invite Link OC SM v10.15.0 to OC SM v10.15.0"
      - "OCM Test Invite Link OC SM v10.15.0 to oCIS v5.0.9"
      - "OCM Test Invite Link oCIS v5.0.9 to NC SM v27.1.11"
      - "OCM Test Invite Link oCIS v5.0.9 to OC SM v10.15.0"
      - "OCM Test Invite Link oCIS v5.0.9 to oCIS v5.0.9"
      - "OCM Test Login Nextcloud v27.1.11"
      - "OCM Test Login Nextcloud v28.0.3"
      - "OCM Test Login ownCloud v10.13.0"
      - "OCM Test Login OCIS v5.0.0"
      - "OCM Test Login OcmStub v1.0"
      - "OCM Test Login Seafile v11.0.5"
      - "OCM Test Share Link NC v27.1.11 to NC v27.1.11"
      - "OCM Test Share Link NC v27.1.11 to NC v28.0.14"
      - "OCM Test Share Link NC v27.1.11 to OC v10.15.0"
      - "OCM Test Share Link NC v27.1.11 to OcmStub v1.0.0"
      - "OCM Test Share Link NC v28.0.14 to NC v27.1.11"
      - "OCM Test Share Link NC v28.0.14 to NC v28.0.14"
      - "OCM Test Share Link NC v28.0.14 to OC v10.15.0"
      - "OCM Test Share Link OC v10.15.0 to NC v27.1.11"
      - "OCM Test Share Link OC v10.15.0 to NC v28.0.14"
      - "OCM Test Share Link OC v10.15.0 to OC v10.15.0"
      - "OCM Test Share With NC v27.1.11 to NC v27.1.11"
      - "OCM Test Share With NC v27.1.11 to NC v28.0.14"
      - "OCM Test Share With NC v27.1.11 to OC v10.15.0"
      - "OCM Test Share With NC v27.1.11 to OcmStub v1.0.0"
      - "OCM Test Share With NC v28.0.14 to NC v27.1.11"
      - "OCM Test Share With NC v28.0.14 to NC v28.0.14"
      - "OCM Test Share With NC v28.0.14 to OC v10.15.0"
      - "OCM Test Share With NC v28.0.14 to OcmStub v1.0.0"
      - "OCM Test Share With OC v10.15.0 to NC v27.1.11"
      - "OCM Test Share With OC v10.15.0 to NC v28.0.14"
      - "OCM Test Share With OC v10.15.0 to OC v10.15.0"
      - "OCM Test Share With OC v10.15.0 to OcmStub v1.0.0"
      - "OCM Test Share With OcmStub v1.0.0 to NC v27.1.11"
      - "OCM Test Share With OcmStub v1.0.0 to NC v28.0.14"
      - "OCM Test Share With OcmStub v1.0.0 to OC v10.15.0"
      - "OCM Test Share With OcmStub v1.0.0 to OcmStub v1.0.0"
      - "OCM Test Share With SF v11.0.5 to SF v11.0.5"
    types:
      - completed

jobs:
  # This job checks if *all* specified workflow files have completed (or even
  # run) for the commit that triggered this orchestrator workflow. It fails if
  # any are still running or missing.
  wait-for-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check all workflows completed
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            /*
             * This script:
             *   1. Defines an array of workflow filenames (NOT the same as the "name:" field).
             *   2. Uses the GitHub Actions REST API (via github-script) to check for runs
             *      matching the commit SHA (triggeringSHA).
             *   3. Marks a workflow as "pending" if no run is found or if the run's status
             *      isn't "completed."
             *   4. If any workflow is pending, setFailed(...) to fail the job.
             *   5. Otherwise, sets an output 'all_completed' to true for future steps.
             */
            const workflows = [
              // These workflow filenames must match your actual repository file names.
              'invite-link-nc-sm-v27-nc-sm-v27.yml',
              'invite-link-nc-sm-v27-oc-sm-v10.yml',
              'invite-link-nc-sm-v27-ocis-v5.yml',
              'invite-link-oc-sm-v10-nc-sm-v27.yml',
              'invite-link-oc-sm-v10-oc-sm-v10.yml',
              'invite-link-oc-sm-v10-ocis-v5.yml',
              'invite-link-ocis-v5-nc-sm-v27.yml',
              'invite-link-ocis-v5-oc-sm-v10.yml',
              'invite-link-ocis-v5-ocis-v5.yml',
              'login-nc-v27.yml',
              'login-nc-v28.yml',
              'login-oc-v10.yml',
              'login-ocis-v5.yml',
              'login-os-v1.yml',
              'login-sf-v11.yml',
              'share-link-nc-v27-nc-v27.yml',
              'share-link-nc-v27-nc-v28.yml',
              'share-link-nc-v27-oc-v10.yml',
              'share-link-nc-v27-os-v1.yml',
              'share-link-nc-v28-nc-v27.yml',
              'share-link-nc-v28-nc-v28.yml',
              'share-link-nc-v28-oc-v10.yml',
              'share-link-oc-v10-nc-v27.yml',
              'share-link-oc-v10-nc-v28.yml',
              'share-link-oc-v10-oc-v10.yml',
              'share-with-nc-v27-nc-v27.yml',
              'share-with-nc-v27-nc-v28.yml',
              'share-with-nc-v27-oc-v10.yml',
              'share-with-nc-v27-os-v1.yml',
              'share-with-nc-v28-nc-v27.yml',
              'share-with-nc-v28-nc-v28.yml',
              'share-with-nc-v28-oc-v10.yml',
              'share-with-nc-v28-os-v1.yml',
              'share-with-oc-v10-nc-v27.yml',
              'share-with-oc-v10-nc-v28.yml',
              'share-with-oc-v10-oc-v10.yml',
              'share-with-oc-v10-os-v1.yml',
              'share-with-os-v1-nc-v27.yml',
              'share-with-os-v1-nc-v28.yml',
              'share-with-os-v1-oc-v10.yml',
              'share-with-os-v1-os-v1.yml',
              'share-with-sf-v11-sf-v11.yml',
            ];
            
            // The commit SHA that triggered this workflow.
            const triggeringSHA = context.payload.workflow_run.head_sha;
            console.log(`Checking workflows for commit: ${triggeringSHA}`);
            
            // Iterate over each of the listed workflow filenames:
            for (const workflow of workflows) {
              // We request the workflow runs for the specific file & commit SHA.
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflow,
                head_sha: triggeringSHA,
              });
              
              // If no runs exist for the filename & commit, fail immediately
              if (runs.data.total_count === 0) {
                const message = `Workflow ${workflow} has no run for commit ${triggeringSHA}`;
                console.log(message);
                core.setFailed(message);
                return;
              }
              
              // Take the first run (index 0)
              const run = runs.data.workflow_runs[0];
              
              // If that run's status is not 'completed', fail immediately
              if (run.status !== 'completed') {
                const message = `Workflow ${workflow} is still running (status: ${run.status})`;
                console.log(message);
                core.setFailed(message);
                return;
              }
              
              console.log(`Workflow ${workflow} completed with conclusion: ${run.conclusion}`);
            }
            
            // If we get here, all workflows are completed
            console.log(`All workflows completed for commit ${triggeringSHA}`);
            core.setOutput('all_completed', 'true');

  # This job depends on "wait-for-tests" finishing successfully. If all tests 
  # completed, it runs the "github-pages.yml" workflow by referencing it as a 
  # "uses" component in the local repository.
  trigger-pages:
    # Only run if wait-for-tests succeeds (no pending workflows).
    needs: wait-for-tests
    uses: ./.github/workflows/github-pages.yml
    with:
      sha: ${{ github.event.workflow_run.head_sha }} 
