name: OCM Tests Orchestrator

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the specified branch and files.
  push:
    branches:
      - main
    paths:
      - "cypress/ocm-test-suite/**"
      - ".github/workflows/**"
  pull_request:
    branches:
      - main
    paths:
      - "cypress/ocm-test-suite/**"
      - ".github/workflows/**"
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  orchestrate-tests:
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.get-sha.outputs.sha }}
      workflows: ${{ steps.collect.outputs.matrix }}
      done: ${{ steps.run-tests.outputs.done }}
      matrix_file:  ${{ steps.run-tests.outputs.matrix_file }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get commit SHA
        id: get-sha
        run: echo "sha=$(git rev-parse HEAD)" >> "${GITHUB_OUTPUT}"

      - name: Set ref for workflow dispatch
        id: set-ref
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "ref=${{ github.head_ref }}" >> "${GITHUB_OUTPUT}"
          else
            echo "ref=${{ github.ref }}" >> "${GITHUB_OUTPUT}"
          fi
      
      - name: Collect test workflows
        id: collect
        run: |
          list=$(ls .github/workflows | grep -E '^(login|share-(link|with)|invite-link).*\.ya?ml$' \
                  | paste -sd "," -)
          echo "matrix=${list}" >> "$GITHUB_OUTPUT"

      - name: Trigger and monitor test workflows
        id: run-tests
        uses: actions/github-script@v7
        env:
          WORKFLOW_REF: ${{ steps.set-ref.outputs.ref }}
          WORKFLOWS_CSV: ${{ steps.collect.outputs.matrix }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const orchestrateTests = require('./scripts/github/orchestrate-tests.js');
            context.ref = process.env.WORKFLOW_REF;

            try {
              const matrixFile = await orchestrateTests(github, context, core);
              core.setOutput('matrix_file', matrixFile);
              core.setOutput('done', 'true');
            } catch (err) {
              // Orchestrator itself failed - mark job red.
              core.setOutput('done', 'false');
              core.setFailed(`orchestrator error: ${err.message}`);
            }
      
      - name: Upload compatibility matrix artifact
        if: steps.run-tests.outputs.done == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: compatibility-matrix
          path: ${{ steps.run-tests.outputs.matrix_file }}

  commit-matrix:
    needs: orchestrate-tests
    if: needs.orchestrate-tests.outputs.done == 'true' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v4
        with:
          name: compatibility-matrix

      - name: Move file into docs tree
        run: |
          mkdir -p docs
          mv compatibility-matrix.md docs/4.2-compatibility-matrix.md

      - name: Commit & push (skip CI re-run)
        run: |
          git config user.name  "ci-bot"
          git config user.email "ci@example.invalid"
          git add docs/4.2-compatibility-matrix.md
          if git diff --cached --quiet; then
            echo "No changes â€” skipping commit"
          else
            git commit -m "docs: update compatibility matrix [skip ci]"
            git push
          fi

  trigger-pages:
    needs: orchestrate-tests
    # only run if the tests passed AND we're on main
    if: needs.orchestrate-tests.outputs.done == 'true' && github.ref == 'refs/heads/main'
    uses: ./.github/workflows/github-pages.yml
    with:
      sha: ${{ needs.orchestrate-tests.outputs.commit_sha }}
      workflows:  ${{ needs.orchestrate-tests.outputs.workflows }}
