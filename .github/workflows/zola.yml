name: Deploy Zola site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours to fetch new artifacts

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  fetch-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup directories
        run: mkdir -p site/static/artifacts

      - name: Download Artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Function to download artifacts from a workflow
          download_artifacts() {
            local workflow=$1
            echo "Processing workflow: $workflow"
            
            # Get the latest workflow run ID
            latest_run=$(gh api repos/pondersource/dev-stock/actions/workflows/$workflow/runs --jq '.workflow_runs[0].id')
            if [ -n "$latest_run" ]; then
              echo "Latest run ID: $latest_run"
              
              # Get artifacts for this run
              artifacts_json=$(gh api repos/pondersource/dev-stock/actions/runs/$latest_run/artifacts)
              
              # Process each artifact
              echo "$artifacts_json" | jq -r '.artifacts[] | "\(.id) \(.name)"' | while read -r id name; do
                echo "Downloading artifact $name (ID: $id)"
                
                # Create a temporary directory for this artifact
                tmp_dir=$(mktemp -d)
                
                # Download the artifact
                gh api repos/pondersource/dev-stock/actions/artifacts/$id/zip -H "Accept: application/vnd.github+json" > "$tmp_dir/artifact.zip"
                
                # Extract to the appropriate directory
                workflow_name=$(basename $workflow)
                target_dir="site/static/artifacts/${workflow_name%.*}-$name"
                mkdir -p "$target_dir"
                unzip -o "$tmp_dir/artifact.zip" -d "$target_dir"
                
                # Convert videos to web format
                find "$target_dir" -name "*.mp4" -exec sh -c '
                  input="$1"
                  output="${input%.mp4}.webm"
                  echo "Converting $input to $output"
                  ffmpeg -i "$input" -c:v libvpx-vp9 -crf 30 -b:v 0 -b:a 128k -c:a libopus "$output" -y
                ' sh {} \;
                
                # Cleanup
                rm -rf "$tmp_dir"
              done
            fi
          }

          # Get all workflow files and process them
          gh api repos/pondersource/dev-stock/actions/workflows --jq '.workflows[].path' | while read -r workflow; do
            if echo "$workflow" | grep -qE 'share-|login-|invite-'; then
              echo "Found test workflow: $workflow"
              download_artifacts $(basename "$workflow")
            fi
          done

          # Generate artifact manifest
          echo "Generating artifact manifest..."
          find site/static/artifacts -type f \( -name "*.webm" -o -name "*.mp4" \) | jq -R -s 'split("\n")[:-1]' > site/static/artifacts/manifest.json
          
          # Debug output
          echo "Contents of artifacts directory:"
          ls -R site/static/artifacts

      - name: Upload artifact manifest
        uses: actions/upload-artifact@v4
        with:
          name: artifact-manifest
          path: site/static/artifacts/manifest.json

  build:
    needs: fetch-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install Zola
        run: |
          ZOLA_VERSION="0.17.2"
          wget -q "https://github.com/getzola/zola/releases/download/v${ZOLA_VERSION}/zola-v${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
          tar xzf "zola-v${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
          sudo mv zola /usr/local/bin

      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifact-manifest
          path: site/static/artifacts
      
      - name: Build
        run: |
          cd site
          zola build
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 